#Aqui se presenta el codigo de acuerdo a las instrucciones dadas por el Maestro.

import sys
import datetime
import sqlite3
import pandas as pd
from sqlite3 import Error


try:
    with sqlite3.connect("Ventas_cosmeticos.db", detect_types = sqlite3.PARSE_DECLTYPES | sqlite3.PARSE_COLNAMES) as conn:
        c = conn.cursor()
        fecha_actual=datetime.datetime.combine(datetime.date.today(), datetime.datetime.min.time())
        registros_detalle={"Fecha":fecha_actual,"Producto":None,"Cantidad":None,"Precio":None,"Folio":None}
        registro_venta={"Nombre":None}
        
        while (True):
            resp = 1
            print("\nMENU PRINCIPAL\n")
            print("[1] Registrar Venta" )
            print("[2] Consultar Venta")
            print("[3] Reporte de Ventas")
            print("[4] Salir")
            op = int(input("¿Qué deseas hacer?  > "))
            if op == 4:
                print("GRACIAS POR UTILIZAR EL PROGRAMA")
                break
            elif op == 1:
                nombre = input("\nDame el nombre del cliente: ")
                registro_venta["Nombre"] = nombre
                c.execute("INSERT INTO Venta (Nombre) VALUES(:Nombre)", registro_venta)
                conn.commit()
                c.execute("SELECT MAX(FOLIO) FROM Venta")
                folio = c.fetchall()[0][0]
                registros_detalle["Folio"] = folio
                
                while resp == 1:
                    producto = input("Dime la descripcion del articulo: ")
                    while True:
                        try:
                            cantidad = int(input("Dime la cantidad de piezas: "))
                            precio = str(input("Dame el precio de venta: "))
                            break
                        except ValueError:
                            print("Solo se aceptan numeros")
                            continue   
                    registros_detalle["Producto"] = producto
                    registros_detalle["Cantidad"] = cantidad
                    registros_detalle["Precio"] = precio
                    c.execute("INSERT INTO registro_ventas (Folio,Fecha,Producto,Cantidad,Precio) VALUES(:Folio,:Fecha, :Producto, :Cantidad, :Precio)", registros_detalle)
                    conn.commit()  
                    resp = int(input("\n ¿Deseas capturar otro registro? \n(1-Si / 0-No): "))
                    
                    if resp == 0:
                        c.execute("SELECT SUM(PRECIO) FROM registro_ventas WHERE FOLIO = :Folio", registros_detalle)
                        precio = c.fetchall()[0][0]
                        precio = str(round(precio, 2))
                        print(f"El total a pagar del Cliente {nombre} con el Folio #{folio} es de ${precio}")
            
            elif op == 2:
                while True:
                    try:
                        consulta_venta = int(input("\nDame el folio del cliente para consultar su venta: "))
                        break
                    except ValueError:
                        print("Solo se aceptan numeros enteros")
                folio_valor = {"consulta_venta":consulta_venta}
                c.execute("SELECT D.Fecha,D.Folio,V.Nombre,D.Producto,D.Cantidad,D.Precio FROM Venta V,registro_ventas D WHERE V.Folio = :consulta_venta AND D.Folio = :consulta_venta",folio_valor)
                folio_buscado=c.fetchall()
                c.execute("SELECT SUM(PRECIO) FROM registro_ventas WHERE FOLIO = :consulta_venta", folio_valor)
                folio_precio = c.fetchall()[0][0]
                if folio_precio == None:
                    pass
                else:
                    folio_precio = str(round(folio_precio, 2))
                c.execute("SELECT V.Nombre,D.Folio FROM Venta V,registro_ventas D WHERE V.Folio = :consulta_venta AND D.Folio = :consulta_venta",folio_valor)
                folio_nombre=(c.fetchone(),)[0]
                if folio_buscado:
                    df=pd.DataFrame(folio_buscado)
                    df.columns = ['Fecha','Folio','Nombre','Producto','Cantidad','Precio']
                    df.set_index('Folio',inplace=True)
                    print("\n",df)
                    print(f"El total a pagar del Cliente {folio_nombre[0]} del Folio #{consulta_venta} es de ${folio_precio}")
                else:
                    print(f"No se encontró ningun registro con la clave {consulta_venta}")
                    
            elif op == 3:
                fecha_reporte = input("Dime una fecha (dd/mm/aaaa): ")
                fecha_reporte = datetime.datetime.strptime(fecha_reporte, "%d/%m/%Y").date()
                fecha_criterio = {"Fecha":fecha_reporte}
                c.execute("SELECT Fecha,Folio,Producto,Cantidad,Precio FROM registro_ventas WHERE DATE(Fecha) = :Fecha;",fecha_criterio)
                fechas = c.fetchall()
                c.execute("SELECT SUM(PRECIO) FROM registro_ventas WHERE DATE (Fecha) = :Fecha;",fecha_criterio)
                precio_fecha = c.fetchall()[0][0]
                if precio_fecha == None:
                    pass
                else:
                    precio_fecha = str(round(precio_fecha, 2))
                if fechas:
                    df=pd.DataFrame(fechas)
                    df.columns = ['Fecha','Folio','Producto','Cantidad','Precio']
                    df.set_index('Fecha',inplace=True)
                    print("\n",df)
                    print(f"Las ventas registradas en la Fecha {fecha_reporte} es de ${precio_fecha}")
                else:
                    print(f"No se encontró ningun registro con la fecha {fecha_reporte}")
                    
except sqlite3.Error as e:
    print (e)
except Exception:
    print(f"Se produjo el siguiente error: {sys.exc_info()[0]}")
finally:
    if (conn):
        conn.close()
        print("Se ha cerrado la conexión")   
